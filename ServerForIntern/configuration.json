{
  "objects": [
    {
      "kind": "stateless_actor",
      "dependency": "ExceptionHandlerActor",
      "name": "exception-handler-actor"
    },
    {
      "kind": "stateless_actor",
      "dependency": "ResponseSenderActor",
      "name": "respond"
    },
    {
      "kind": "actor",
      "dependency": "SampleActor",
      "name": "sample-actor"
    },
    {
      "kind": "actor",
      "dependency": "SampleOtherActor",
      "name": "sample-other-actor"
    },
    {
      "kind": "actor",
      "dependency": "SampleDBActor",
      "name": "sample-db-actor"
    },
    {
      "kind": "raw",
      "dependency": "info.smart_tools.smartactors.core.chain_call_receiver.ChainCallReceiver",
      "strategyDependency": "chain choice strategy",
      "name": "chain_selector"
    },
    {
      "kind": "raw",
      "dependency": "ActorCollection",
      "name": "my-actor-collection"
    }
  ],
  "maps": [
    {
      "id": "exceptionHandler",
      "externalAccess": true,
      "steps": [
        {
          "target": "exception-handler-actor",
          "handler": "handle",
          "wrapper": {
            "in_getMessage": "message",
            "in_getContext": "context",
            "in_getResponse": "response",
            "in_getConfig": "config"
          }
        }
      ],
      "exceptional": []
    },
    {
      "id": "SelectChain",
      "steps": [
        {
          "target": "chain_selector"
        }
      ],
      "exceptional": [
        {
          "class": "info.smart_tools.smartactors.actors.exception.SampleException",
          "chain": "exceptionHandler"
        }
      ]
    },
    {
      "id": "myChain",
      "steps": [
        {
          "target": "sample-actor",
          "handler": "transformAndPutForResponse",
          "wrapper": {
            "in_getSomeField": "message/Field",
            "out_setSomeValueForRequest": "response/TransformedField",
            "out_setCurrentActorState": "response/CurrentState",
            "in_resetState": "message/Reset"
          }
        },
        {
          "target": "my-actor-collection",
          "handler": "transformAndPutForResponse",
          "new": {
            "kind": "actor",
            "dependency": "SampleActor"
          },
          "key": "in_actorId",
          "wrapper": {
            "in_actorId": "message/ActorId",
            "in_getSomeField": "message/Field",
            "out_setSomeValueForRequest": "response/TransformedField",
            "out_setCurrentActorState": "response/CurrentState",
            "in_resetState": "message/Reset"
          }
        },
        {
          "target": "respond",
          "handler": "sendResponse"
        }
      ],
      "exceptional": [
        {
          "class": "info.smart_tools.smartactors.actors.exception.SampleException",
          "chain": "exceptionHandler",
          "after": "break"
        }
      ]
    },
    {
      "id": "myChainOther",
      "steps": [
        {
          "target": "sample-other-actor",
          "handler": "transformAndPutForResponse",
          "wrapper": {
            "in_getStringValue": "message/value"
          }
        }
      ],
      "exceptional": [
        {
          "class": "info.smart_tools.smartactors.actors.exception.SampleException",
          "chain": "exceptionHandler"
        }
      ]
    },
    {
      "id": "upsertDocument",
      "steps": [
        {
          "target": "sample-db-actor",
          "handler": "upsertDocument",
          "wrapper": {
            "in_getCollectionName": "message/collection",
            "in_getDocument": "message/document",
            "out_setDocument": "response/upserted"
          }
        },
        {
          "target": "respond",
          "handler": "sendResponse"
        }
      ],
      "exceptional": []
    },
    {
      "id": "getDocument",
      "steps": [
        {
          "target": "sample-db-actor",
          "handler": "getDocumentById",
          "wrapper": {
            "in_getCollectionName": "message/collection",
            "in_getDocumentId": "message/id",
            "out_setDocument": "response/found"
          }
        },
        {
          "target": "respond",
          "handler": "sendResponse"
        }
      ],
      "exceptional": []
    }, {
      "id": "testing_chain",
      "steps": [{
        "target": "sample-actor",
        "handler": "transformAndPutForResponse",
        "wrapper": {
          "in_getSomeField": "message/Field",
          "out_setSomeValueForRequest": "response/TransformedField",
          "out_setCurrentActorState": "response/CurrentState",
          "in_resetState": "message/Reset"
        }
      }],
      "exceptional": []
    }
  ],
  "endpoints": [
    {
      "name": "mainHttpEp",
      "type": "http",
      "port": 9909,
      "startChain": "SelectChain",
      "maxContentLength": 4098,
      "stackDepth": 5
    }
  ],
  "executor": {
    "threadCount": 4,
    "maxRunningThreads": 2,
    "maxExecutionDelay": 100000,
    "queueSize": 10000000
  },
  "messageBus": {
    "routingChain": "SelectChain",
    "stackDepth": 5
  },
  "test": {
    "reporterChainName": "testReportChainId",
    "tests": [{
      "name": "test_1",
      "entryPoint": "chain",
      "environment": {
        "message": {
          "Field": "1",
          "Reset": true
        },
        "context": {}
      },
      "chainName": "testing_chain",
      "assert": [{
        "name": "result1",
        "type": "equal",
        "value": "response/TransformedField",
        "to": "1_transformed"
      }, {
        "name": "result2",
        "type": "equal",
        "value": "response/CurrentState",
        "to": 0
      }]
    }, {
      "name": "test_2",
      "entryPoint": "chain",
      "environment": {
        "message": {
          "Field": "1"
        },
        "context": {}
      },
      "chainName": "testing_chain",
      "intercept": {
        "class": "info.smart_tools.smartactors.actors.exception.SampleException",
        "target": "sample-actor"
      }
    }, {
      "name": "test_3",
      "entryPoint": "httpEndpoint",
      "environment": {
        "message": {
          "messageMapId": "myChain",
          "Field": "1",
          "Reset": true
        },
        "context": {},
        "request": {
          "protocolVersion": "HTTP/1.1",
          "keepAlive": true,
          "headers": [{
            "name": "name",
            "value": "value"
          }],
          "method": "POST",
          "uri": "/"
        }
      },
      "chainName": "SelectChain",
      "assert": [{
        "name": "result1",
        "type": "equal",
        "value": "response/TransformedField",
        "to": "1_transformed"
      }, {
        "name": "result2",
        "type": "equal",
        "value": "response/CurrentState",
        "to": 0
      }]
    }]
  }
}
